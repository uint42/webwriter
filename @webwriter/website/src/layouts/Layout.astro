---
import "@shoelace-style/shoelace/dist/themes/light.css"
import EmailAddress from "@components/emailadress.vue"
import iconUrl from "@assets/app-icon.svg?url"

import {msgResolver} from "../localize"

const lang = Astro.currentLocale!
const translations = {
  "docs": {"de": "Dokumentation"},
  "about": {"de": "Über uns"},
  "get_started": {"de": "Starten"},
  "Get Started": {"de": "Starten"},
  "Features": {"de": "Funktionen"},
  "© Frederic Salmen. All rights reserved.": {"de": "© Frederic Salmen. Alle Rechte vorbehalten."},
  "Legal Notice": {"de": "Impressum"},
  "Pages": {"de": "Seiten"},

}

const msg = msgResolver(translations, lang)

export interface Props {
	title?: string;
}

const { title } = Astro.props

const pathname = new URL(Astro.request.url).pathname

function capitalize(str: string) {
  return str[0].toUpperCase() + str.slice(1)
}

const pageFiles = (await Astro.glob("../pages/**/*.astro")).filter(page => !page.url?.endsWith("]") && !page.url?.endsWith("404") && !page?.url?.endsWith("legal_notice")  && !page?.url?.endsWith("privacy") && !page?.url?.endsWith("dashboard") && !page?.url?.endsWith("get_started")  && page.url)
const pageUrls = pageFiles
  .map(page => page.url ?? "")
  .map(url => getRelativeLocaleUrl(Astro.currentLocale!, url))
const pageOrder = ["", "news", "explorables", "packages", "docs", "about", "get_started"]
const pages = pageUrls
	.map(relUrl => {
		let id = relUrl?.split("/").at(-2) as string
    const rootLocation = relUrl?.split("/").at(1) as string
		let name = id? msg(id).split("_").map(capitalize).join(" "): msg("Features")
    let active = rootLocation === pathname.split("/")?.at(1)
    let urlObj = new URL(Astro.request.url); urlObj.pathname = relUrl
    let url = urlObj.href
		return {url, name, id, active}
	})
	.sort((a, b) => {
		return pageOrder.indexOf(a.id) - pageOrder.indexOf(b.id)
	})
const rootActive = pathname === "/"
const getStartedActive = pathname === "/get_started"

import "bootstrap-icons/font/bootstrap-icons.css"

import { SEO } from "astro-seo";
import LanguagePicker from "@components/LanguagePicker.astro";
import { getRelativeLocaleUrl } from "astro:i18n";

---

<!DOCTYPE html>
<html lang={lang}>
	<head>
		<meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
		<link rel="icon" type="image/svg" href={iconUrl} />
		<link rel="sitemap" href="/sitemap-index.xml" />
		<meta name="generator" content={Astro.generator} />
    <link rel="icon" href="/assets/app-icon.svg">
    <script>
      import "@webcomponents/scoped-custom-element-registry"
      import "@shoelace-style/shoelace/dist/components/icon/icon.js"
    </script>
    <SEO
      title={title}
      titleTemplate="%s | WebWriter"
      titleDefault="WebWriter"
      description="Digital worksheet tool for teachers"
    />
	</head>
	<body>
		<header id="layout-header">
      <a data-swup-preload href={getRelativeLocaleUrl(Astro.currentLocale!)} class="logo">
        <img src={iconUrl} alt="WebWriter Icon" width={40} height={40} />
        <span class="logo-text">{msg("WebWriter")}</span>
      </a>
			<nav>
        <label class="menu-toggle bi-list" for="menu-toggle"></label>
        <input id="menu-toggle" type="checkbox" class="bi-list">
        <ol class="menu">
				{pages.filter(page => page.id !== "get_started").map(page => (<li><a  data-swup-preload class={page.id} data-active={page.active? true: undefined} draggable="false" href={page.url}>
					{page.name}
				</a></li>))}
			</ol>
      <a class="dashboard" href={getRelativeLocaleUrl(Astro.currentLocale!, "/dashboard")}>
        <div class="icon bi-person-circle"></div>
      </a>
      <a data-swup-preload class="get_started" draggable="false"  href="https://run.webwriter.app">{msg("Get Started")}</a>
    </nav>
		</header>
		<main id="swup">
			<slot />
		</main>
		<footer>
      <div class="imprint">
        <div class="logo">
          <img id="icon-footer" src={iconUrl} alt="WebWriter Icon" width={40} height={40} />
          <span class="logo-text">
            <span>{msg("WebWriter")}</span>
            <EmailAddress class:list={["contact"]} client:only="vue" local="contact" domain="webwriter.app" />
          </span>
        </div>
        <div>{msg("© Frederic Salmen. All rights reserved.")}</div>
        <a data-swup-preload class="legal_notice" draggable="false" href={getRelativeLocaleUrl(Astro.currentLocale!, "/legal_notice")}>{msg("Legal Notice")}</a>
        <a class="privacy_policy" draggable="false" href={getRelativeLocaleUrl(Astro.currentLocale!, "/privacy")}>{msg("Privacy policy")}</a>
      </div>
      <div class="sitemap-card">
        <h2>{msg("Pages")}</h2>
        <nav><ol>
          {pages.map(page => (<li><a data-swup-preload draggable="false" href={page.url}>
            {page.name}
          </a></li>))}
        </ol></nav>
      </div>
      <div class="sitemap-card">
        <h2>{msg("Community")}</h2>
        <nav><ol>
          <li><a href="https://github.com/webwriter-app">GitHub</a></li>
          <li><a href="https://learntech.rwth-aachen.de">LearnTech</a></li>
          <li><a href="https://explorabl.es">Explorables</a></li>
        </ol></nav>
      </div>
      <div class="settings-card">
        <LanguagePicker></LanguagePicker>
      </div>
		</footer>
	</body>
</html>

<script>
  import {pocketbase} from "../lib/pocketbase"



  function updateUserUI() {
    if(!pocketbase.authStore.isValid) {
      document.body.setAttribute("data-status", "signedout")
    }
    else {
      document.body.setAttribute("data-status", "signedin")
      const dashHeader = document.querySelector("#dash h1")
      const user = pocketbase.authStore.record
      dashHeader && (dashHeader.textContent = `${user!.email}`)
    }
  }
  pocketbase.authStore.onChange((token, model) => updateUserUI())
  updateUserUI()
</script>

<style is:global>
	:root {
		--background-color: #f0f0f0;
	}

	html {
		--ww-features-bg-color: hsla(200, 98%, 39%, 0.2);
		font-family: system-ui, sans-serif;
    background: var(--background-color);
    overflow-y: scroll;
	}

	body {
		margin: 0;
    max-width: 1920px;
    margin: 0 auto;
    position: relative;
    background: var(--background-color);
	}

  main {
    min-height: calc(100vh - 70px - 14rem);
    box-sizing: border-box;
    margin: 0 auto;
  }

  @keyframes spinner {
    to {transform: rotate(360deg);}
  }

  main.loading::after {
    content: '';
    box-sizing: border-box;
    position: absolute;
    top: 150px;
    left: 50%;
    width: 100px;
    height: 100px;
    border-radius: 50%;
    border: 10px solid #ccc;
    border-top-color: var(--sl-color-primary-600);
    animation: spinner .6s linear infinite;
  }

	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}

	#layout-header {
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		position: sticky;
    width: 100%;
    height: 70px;
		top: 0;
		left: 0;
    gap: 2rem;
    padding: 0 2rem;
		background: var(--background-color);
    box-sizing: border-box;
    color: var(--sl-color-gray-900);
    z-index: 10000000;
	}

	#layout-header ol {
		display: flex;
		flex-direction: row;
    flex-wrap: wrap;
		list-style-type: none;
		margin: 0;
		gap: 0.1rem 2rem;
    padding-left: 0;
		align-items: center;
		font-size: min(max(0.8rem, 1.5vw), 1rem);
    font-weight: bold;
    font-family: system-ui;
	}

  footer ol {
    display: flex;
		flex-direction: column;
		list-style-type: none;
		padding: 0;
		margin: 0;
		gap: 0.25rem;
		font-size: 0.9rem;
  }

  #layout-header nav {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 2rem;
  }

	#layout-header a, footer a {
		text-decoration: none;
		color: inherit;
		user-select: none;
		-moz-user-select: none;
	}

  #layout-header a[data-active] {
    color: var(--sl-color-primary-600);
  }

	#layout-header a:hover, footer a:hover {
		color: var(--sl-color-primary-500);
	}

	#layout-header a:active, footer a:active {
		color: var(--sl-color-primary-800);
	}

  footer {
    background: var(--sl-color-gray-950);
    color: white;
    display: flex;
    flex-direction: row;
    align-items: stretch;
    gap: 1rem;
    padding: 2rem;
    justify-content: space-around;
    height: 14rem;
    box-sizing: border-box;
  }

  .logo {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 1rem;
    font-weight: bold;
    font-size: 1.5rem;
  }

  .logo[data-active] {
    text-decoration: underline;
  }

  .imprint .logo-text {
    display: flex;
    flex-direction: column;
  }

  .logo sup {
    font-size: 0.8rem;
  }

  .imprint {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    font-size: 0.8rem;
  }

  .imprint .contact {
    color: white;
    font-size: 0.8rem;
    margin-bottom: 1rem;
  }

  .sitemap-card h2 {
    margin-top: 0;
  }

  .dashboard {
    font-size: 1.75rem;
  }

  body[data-status=signedin] .dashboard:not(:hover) {
    color: var(--sl-color-primary-700) !important;
  }

  .get_started {
    display: inline-block;
    background: var(--sl-color-primary-600);
    padding: 0.25rem 0.5rem;
    font-weight: bold;
    color: var(--sl-color-gray-50) !important;
    border-radius: var(--sl-border-radius-medium);
    border: 2px solid var(--sl-color-gray-950);
    text-align: center;
  }

  .get_started:hover {
    background: var(--sl-color-primary-400);
  }

  .get_started:active {
    background: var(--sl-color-primary-800);
  }

  .get_started[data-active] {
    text-decoration: underline !important;
  }

  #menu-toggle {
    display: none;
  }

  .menu-toggle {
    display: none;
    font-size: 1.5rem;
    cursor: pointer;
  }

  .menu-toggle:hover {
    color: var(--sl-color-primary-400);
  }

  .menu-toggle:active {
    color: var(--sl-color-primary-800);
  }

  #icon-footer {
    background: white;
    padding: 5px;
    border-radius: 10px;
  }

  #swup {
    transition: 0.5s;
    opacity: 1;
  }

  html.is-animating #swup {
    opacity: 0;
  }

  @media only screen and (min-width: 500px) and (max-width: 800px) {
    .logo-text {
      display: none;
    }

    footer h2, footer .logo {
      font-size: 1rem;
    }

    footer {
      position: relative;
    }

    .lang-options {
      display: flex;
      flex-direction: column;
      list-style-type: none;
      padding-left: 0;
      justify-content: end;
      position: absolute;
      gap: 0.1rem;
      bottom: 2rem;
      right: 2rem;

      & li {
        font-size: 0.75rem;
        height: 1.5rem;
      }
    }
  }

  @media only screen and (max-width: 499px) {

    .logo-text {
      display: none;
    }

    footer h2, footer .logo {
      font-size: 1rem;
    }

    footer {
      flex-wrap: wrap;
      height: calc(100vh - 70px);
      padding: 1rem;
      justify-content: start;
    }

    .lang-options {
      display: flex;
      list-style-type: none;
      padding-left: 0;
      justify-content: center;
    }

    .imprint {
      flex-direction: row;
      flex-wrap: wrap;
    }

    #layout-header {
      gap: 1rem;
      padding: 0 1rem;
      & a:not(.dashboard) {
        font-size: 1rem;
      }
    }

    .get_started {
      display: none;
    }
  }


</style>
